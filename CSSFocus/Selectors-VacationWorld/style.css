/* The asterisk is universal. Everything gets a red border here.
* {
    border: 1px solid red;
}*/

p {
    color: green;
}

h1 {
  color: maroon;
}

/* dot indicates this is coming from a class */
.title {
    color: teal;
}

.uppercase {
    text-transform: uppercase;
}

/* # indicates this is coming from an id */
#article-title {
    font-family: cursive;
}

/* the formula here is [attribute*='string']*/
a[href*='florence'] {
    color: lightgreen;
}

a[href*='beijing'] {
    color: lightblue;
}

a[href*='seoul'] {
    color: lightpink;
}

a:hover {
    color: darkorange;
}

.heading-background {
    background-color: aqua;
}

#publish-time {
    color: gray;
}

h5 {
    color: yellow;
}

/* ID overrides Class which overrides tag type*/
.author-class {
    color: pink;
}

#author-id {
    color: cornflowerblue
}

/* Chaining is done by writing a rule that refers to both the type and class*/
h2.destination {
    font-family: Tahoma;
}

/* Using a descendant combinator, calling out the class and the type with a space between for nested types
This selects only the h5s nested in .description elements*/
.description h5 {
    color: blueviolet;
}
/* Here I establish a rule for h4s but override with the descendant combinator. It doesn't need a dot because both elements are type while they are also nested.*/
h4 {
 color: dodgerblue;
}

li h4 {
  color: gold;
}
/* To apply the same styling rule to multiple selectors, comma space the selectors.*/

h5,
li {
    font-family: monospace;
}